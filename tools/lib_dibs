#!/bin/bash

typeset -l sudo
if [ -f "/usr/bin/lsb_release" ]; then OS=$(lsb_release -si); else OS=null; fi
DEBIAN_DIBS=(
	"debian"
	"ubuntu"
	"linuxmint"
	"canaima"
	"mint"
	)

FEDORA_DIBS=(
	"fedora"
	"asplinux"
	"redhat"
	)

SUSELINUX_DIBS=(
	"suse linux"
	"suse"
	"suselinux"
	)

ARCHLINUX_DIBS=(
 	"archlinux"
	"arch"
	)

if [[ "$sudo" == true ]]; then prefix=sudo; fi

dib_debian() {
a="echo debian"
for all in ${!DEBIAN_DIBS[@]}; do
	if [[ -f "/etc/debian_version" ]]; then
		$a; exit
	elif [[ "${OS}" == "${DEBIAN_DIBS[$all]}" ]]; then
		echo ${OS}; exit
	fi
done
}

dib_suselinux() {
a="echo suse"
for all in ${!SUSELINUX_DIBS[@]}; do
	if [[ -f "/etc/SuSE-release" ]]; then
		$a; exit
	elif [[ "${OS}" == "${SUSELINUX_DIBS[$all]}" ]]; then
		echo ${OS}; exit
	fi
done
}

dib_fedora() {
a="echo fedora"
for all in ${!FEDORA_DIBS[@]}; do
	if [[ -f "/etc/fedora-release" ]]; then
		$a; exit
	elif [[ -f "/etc/redhat-release" ]]; then
		$a; exit
	elif [[ "${OS}" == "${FEDORA_DIBS[$all]}" ]]; then
		echo ${OS}; exit
	fi
done
}

dib_archlinux() {
a="echo arch"
for all in ${!ARCHLINUX_DIBS[@]}; do
    if [[ -f "/etc/arch-release" ]]; then
        $a; exit
	elif [[ `source /usr/lib/os-release && echo $ID | tr [:upper:] [:lower:]` == "arc"* ]]; then
		$a; exit
	elif [[ "${OS}" == "${ARCHLINUX_DIBS[$all]}" ]]; then
		echo ${OS}; exit
	fi
done
}



IS_DEBIAN=$(dib_debian)
IS_FEDORA=$(dib_fedora)
IS_SUSELINUX=$(dib_suselinux)
IS_ARCHLINUX=$(dib_archlinux)

# Debian/Ubuntu or derivatives functions
function update_packages_debian() { if [ "$IS_DEBIAN" ]; then $prefix apt-get update -y; fi }
function upgrade_packages_debian() { if [ "$IS_DEBIAN" ]; then $prefix apt-get upgrade -y; fi }
function autoremove_packages_debian() { if [ "$IS_DEBIAN" ]; then $prefix apt-get autoremove -y; fi }
# Fedora or drivatives functions
function update_packages_fedora() { if [ "$IS_FEDORA" ]; then $prefix dnf update -y; fi }
function upgrade_packages_fedora() { if [ "$IS_FEDORA" ]; then $prefix dnf upgrade -y; fi }
function autoremove_packages_fedora() { if [ "$IS_FEDORA" ]; then $prefix dnf autoremove -y; fi }
# SuseLinux or drivatives functions
function update_packages_suselinux() { if [ "$IS_SUSELINUX" ]; then $prefix aptitude update -y; fi }
function upgrade_packages_suselinux() { if [ "$IS_SUSELINUX" ]; then $prefix aptitude safe-upgrade -y; fi }
function autoremove_packages_suselinux() { if [ "$IS_SUSELINUX" ]; then $prefix aptitude full-upgrade -y; fi }
# ArchLinux or derivatives functions
function update_packages_archlinux() { if [ "$IS_ARCHLINUX" ]; then $prefix pacman -Sy; fi }
function upgrade_packages_archlinux() { if [ "$IS_ARCHLINUX" ]; then $prefix pacman -Syu $(pacman -Qq) -Sy; fi }
function autoremove_packages_archlinux() { if [ "$IS_ARCHLINUX" ]; then $prefix pacman -R $(pacman -Qdtq) -Sy; fi }

if [ "$action" == "install" ]; then

if [ "$IS_DEBIAN" ]; then
  for package in ${!packages_debian[@]}; do
		$prefix apt-get install ${packages_debian[$package]} -y
  done

elif [ "$IS_FEDORA" ]; then
  for package in ${!packages_fedora[@]}; do
		$prefix dnf install ${packages_fedora[$package]} -y
  done

elif [ "$IS_SUSELINUX" ]; then
  for package in ${!packages_suselinux[@]}; do
		$prefix aptitude install ${packages_suselinux[$package]} -y
  done

elif [ "$IS_ARCHLINUX" ]; then
  for package in ${!packages_archlinux[@]}; do
		$prefix pacman -S --noconfirm ${packages_archlinux[$package]}
  done
fi
if [ "${packages_all}" ]; then
  for package in ${!packages_all[@]}; do
  	if [ "$IS_DEBIAN" ]; then $prefix apt-get install ${packages_all[$package]} -y; fi
	if [ "$IS_FEDORA" ]; then $prefix dnf install ${packages_all[$package]} -y; fi
	if [ "$IS_SUSELINUX" ]; then $prefix aptitude install ${packages_all[$package]} -y; fi
	if [ "$IS_ARCHLINUX" ]; then $prefix pacman -S --noconfirm ${packages_all[$package]} -y; fi
  done
fi
if [ "$update_packages" == true ]; then
	update_packages_debian;update_packages_fedora;update_packages_suselinux;update_packages_archlinux
fi
if [ "$upgrade_packages" == true ]; then
	upgrade_packages_debian;upgrade_packages_fedora;upgrade_packages_suselinux;upgrade_packages_archlinux
fi
if [ "$autoremove_packages" == true ]; then
	autoremove_packages_debian;autoremove_packages_fedora;autoremove_packages_suselinux;autoremove_packages_archlinux
fi
exit
fi

if [ "$action" == "remove" ]; then

if [ "$IS_DEBIAN" ]; then
  for package in ${!packages_debian[@]}; do
		$prefix apt-get remove ${packages_debian[$package]} -y
  done

elif [ "$IS_FEDORA" ]; then
  for package in ${!packages_fedora[@]}; do
		$prefix dnf remove ${packages_fedora[$package]} -y
  done

elif [ "$IS_SUSELINUX" ]; then
  for package in ${!packages_suselinux[@]}; do
		$prefix aptitude remove ${packages_suselinux[$package]} -y
  done

elif [ "$IS_ARCHLINUX" ]; then
  for package in ${!packages_archlinux[@]}; do
		$prefix pacman -R --noconfirm ${packages_archlinux[$package]}
  done
fi
if [ "${packages_all}" ]; then
  for package in ${!packages_all[@]}; do
  	if [ "$IS_DEBIAN" ]; then $prefix apt-get remove ${packages_all[$package]} -y; fi
	if [ "$IS_FEDORA" ]; then $prefix dnf remove ${packages_all[$package]} -y; fi
	if [ "$IS_SUSELINUX" ]; then $prefix aptitude remove ${packages_all[$package]} -y; fi
	if [ "$IS_ARCHLINUX" ]; then $prefix pacman -R --noconfirm ${packages_all[$package]} -y; fi
  done
fi
if [ "$update_packages" == true ]; then
	update_packages_debian;update_packages_fedora;update_packages_suselinux;update_packages_archlinux
fi
if [ "$upgrade_packages" == true ]; then
	upgrade_packages_debian;upgrade_packages_fedora;upgrade_packages_suselinux;upgrade_packages_archlinux
fi
if [ "$autoremove_packages" == true ]; then
	autoremove_packages_debian;autoremove_packages_fedora;autoremove_packages_suselinux;autoremove_packages_archlinux
fi
exit
fi

if [ "$action" == "end" ]; then
  unset action
  exit
fi
exit
