#operadores de comparacion en latino
l = verdadero
e = 10
d = 3.14
lit = 'esto es una "literal"'
cad = "esto es una 'cadena'"

#comparador de igualdad ==
poner("comparador de igualdad ==")
poner(l .. " == falso: " .. l == falso)
poner(e .. " == 10: " .. e == 10)
poner(d .. " == 3.0: " .. d == 3.0)
poner(lit .. " == 'hola': " .. lit == 'hola')
poner(cad .. " == esto es una 'cadena': " .. cad == "esto es una 'cadena'")
poner("----------------------------------------------------------------")
#comparador de desigualdad !=
poner("comparador de desigualdad !=")
poner(l .. " != falso: " .. l != falso)
poner(e .. " != 10: " .. e != 10)
poner(d .. " != 3.0: " .. d != 3.0)
poner(lit .. " != 'hola': " .. lit != 'hola')
poner(cad .. " != esto es una 'cadena': " .. cad != "esto es una 'cadena'")
poner("----------------------------------------------------------------")
#comparador menor que <
poner("comparador menor que <")
poner(e .. " < 10: " .. e < 10)
poner(d .. " < 3.0: " .. d < 3.0)
poner(lit .. " < 'hola': " .. lit < 'hola')
poner(cad .. " < esto es una 'cadena': " .. cad < "esto es una 'cadena'")
poner("----------------------------------------------------------------")
#comparador mayor que >
poner("comparador mayor que >")
poner(e .. " > 10: " .. e > 10)
poner(d .. " > 3.0: " .. d > 3.0)
poner(lit .. " > 'hola': " .. lit > 'hola')
poner(cad .. " > esto es una 'cadena': " .. cad > "esto es una 'cadena'")
poner("----------------------------------------------------------------")
#comparador menor igual que <=
poner("comparador menor igual que <=")
poner(e .. " <= 10: " .. e <= 10)
poner(d .. " <= 3.0: " .. d <= 3.0)
poner(lit .. " <= 'hola': " .. lit <= 'hola')
poner(cad .. " <= esto es una 'cadena': " .. cad <= "esto es una 'cadena'")
poner("----------------------------------------------------------------")
#comparador mayor igual que >=
poner("comparador mayor igual que >=")
poner(e .. " >= 10: " .. e >= 10)
poner(d .. " >= 3.0: " .. d >= 3.0)
poner(lit .. " >= 'hola': " .. lit >= 'hola')
poner(cad .. " >= esto es una 'cadena': " .. cad >= "esto es una 'cadena'")
