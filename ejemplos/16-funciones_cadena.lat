lorem = "Lorem ipsum dolor sit amet, consectetur adipisicing elit,"

#se concatena con .
lorem = lorem . "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
escribir(lorem)

escribir(lorem)

#comparar regresa un numero negativo si
#la cadena 1 es menor a la cadena 2
#0 si son iguales y positivo si es mayor
lugar = "MÃ©xico"
si(comparar(lorem, lugar) == 0)
  escribir("lorem es diferente de lugar")
fin

#contiene, regresa verdadero o falso
escribir("lorem contiene 'ipsum'? " . contiene(lorem, "ipsum"))

#copia una cadena es igual que el aginar ipsum = lorem
ipsum = copiar(lorem)

ipsum = ipsum . "\nAmen"

escribir(ipsum)

#termina_con regresa verdadero si una cadena termina con la palabra enviada
escribir("ipsum termina con 'Amen'?" . termina_con(ipsum, "Amen"))

escribir(ipsum)

#termina_con regresa verdadero si una cadena termina con la palabra enviada
escribir("ipsum termina con 'Amen'? " . termina_con(ipsum, "Amen"))

#indice regresa la posicion en la que se encuentra una palabra empezando con la posicion 0
escribir("se encontro la palabra 'amet' en la posicion: " . indice(lorem, 'amet'))

#insertar, inserta una cadena nueva en la posicion especificada
test = insertar(lorem, " amore ", 22)
escribir(test)

#ultimo indice, regresa la ultima posicion de una palabra dentro de una cadena
escribir("la ultima posicion en que se encuentra 'do' es: " . ultimo_indice(lorem, "do"))

#rellenar izquierda, rellena los lugares faltantes con el valor especificado "0"
formateado = rellenar_izquierda("35", 10, "0")
escribir(formateado)

#rellenar derecha, rellena los lugares faltantes con el valor especificado " "
formateado = rellenar_derecha("35", 10, "0")
escribir(formateado)

#eliminar, elimina una subcadena de la cadena principal
escribir(eliminar(lorem, "amet"))

#esta_vacia, regresa verdadero si la cadena esta vacia
vacia = ""
escribir("esta vacia? " . esta_vacia(vacia))

#longitu, regresa la lingitud de una cadena
escribir("la longitu de lorem es: " . longitud(lorem))

#reemplazar, sustituye una cadena por otra en una cadena
escribir(reemplazar(formateado, "0", "-"))

#empieza_con, regresa verdadero si una cadena empieza con otra cadena
#sensible a mayusculas
escribir("lorem empieza con 'lorem'? " . empieza_con(lorem, 'lorem'))

#minusculas, contiene en minusculas una cadena
escribir(minusculas(lorem))

#mayusculas, contiene en mayusculas una cadena
escribir(mayusculas(lorem))

#quitar espacios
escribir(quitar_espacios('     palabra con espacios      ') . ".")
