incluir ('ajustes')
incluir ('urls')

URL = 'https://api.telegram.org/bot' . api_key . '/'

funcion obtener_offset()
  cURL = "curl  -s '" . URL . "getUpdates' | jq -r '.result[0] .update_id'"
  retorno ejecutar_pipe(cURL)
fin

funcion limpiar_actualizacion()
	res = obtener_offset()
	offset = reemplazar(res, "\n", "") # obtenemos el offset y si es distinto de null le sumamos uno para borrar el mensaje
	si !offset->empieza_con("null")
    si decimal(offset) > 0
      offset = decimal(offset) + 1  # convertimos a decimal() ya que obtener_offset regresa una cadena
    fin
  fin
  cURL = "curl  -s '" . URL . "getUpdates?offset=" . offset . "'"
  ejecutar_pipe(cURL)
fin


funcion obtener_actualizacion(decode)
  res = obtener_offset()
  offset = reemplazar(res, "\n", "")
  cURL = "curl  -s '" . URL . "getUpdates?offset=" . offset . "' | jq -r '" . decode . "'"
  retorno ejecutar_pipe(cURL)
fin

funcion enviarMensaje(chatId, texto)
  cURL = "curl  -s '" . URL . "sendMessage?chat_id=" . chatId . "&text=" . codificar(texto) . "'"
  retorno ejecutar_pipe(cURL)
fin

funcion enviarMensaje_markdown(chatId, texto)
  cURL = "curl  -s '" . URL . "sendMessage?chat_id=" . chatId . "&text=" . codificar(texto) . "&parse_mode=markdown'"
  retorno ejecutar_pipe(cURL)
fin

funcion enviarMensaje_html(chatId, texto)
  cURL = "curl  -s '" . URL . "sendMessage?chat_id=" . chatId . "&text=" . codificar(texto) . "&parse_mode=html'"
  retorno ejecutar_pipe(cURL)
fin

funcion enviarAccion(chatId, accion)
  accion = reemplazar(accion, "escribiendo", "typing")
  accion = reemplazar(accion, "subiendo_foto", "upload_photo")
  accion = reemplazar(accion, "subiendo_video", "upload_video")
  accion = reemplazar(accion, "subiendo_audio", "upload_audio")
  accion = reemplazar(accion, "subiendo_documento", "upload_document")
  accion = reemplazar(accion, "grabando_video", "record_video")
  accion = reemplazar(accion, "grabando_audio", "record_audio")
  accion = reemplazar(accion, "buscar_localizacion", "find_location")
  cURL = "curl  -s '" . URL . "sendChatAction?chat_id=" . chatId . "&action=" . accion . "'"
  retorno ejecutar_pipe(cURL)
fin


funcion reenviarMensaje(chatId, userId, msgId)
  cURL = "curl  -s '" . URL . "forwardMessage?chat_id=" . chatId . "&from_chat_id=" . userId . "&message_id=" . msgId . "'"
  retorno ejecutar_pipe(cURL)
fin

funcion abandonarChat(chatId)
  cURL = "curl  -s '" . URL . "leaveChat?chat_id=" . chatId . "'"
  retorno ejecutar_pipe(cURL)
fin

funcion expulsarUsuario(chatId, userId)
  cURL = "curl  -s '" . URL . "kickChatMember?chat_id=" . chatId . "&user_id=" . userId . "' && curl  -s '" . URL . "unbanChatMember?chat_id=" . chatId . "&user_id=" . userId . "'"
  retorno ejecutar_pipe(cURL)
fin

funcion banearUsuario(chatId, userId)
  cURL = "curl  -s '" . URL . "kickChatMember?chat_id=" . chatId . "&user_id=" . userId . "'"
  retorno ejecutar_pipe(cURL)
fin

funcion desbanearUsuario(chatId, userId)
  cURL = "curl  -s '" . URL . "unbanChatMember?chat_id=" . chatId . "&user_id=" . userId . "'"
  retorno ejecutar_pipe(cURL)
fin

mientras verdadero
  mensaje = obtener_actualizacion(".result[0] .message .text")
  usuario_id = obtener_actualizacion(".result[0] .message .from .id")
  chat_id = obtener_actualizacion(".result[0] .message .chat .id")
  
  #despues de leer la actualizacion limpiamos
  limpiar_actualizacion()
  
  usuario_id = reemplazar(usuario_id, "\n", "")
	chat_id = reemplazar(chat_id, "\n", "")
  
  
  si ( mensaje == "/start\n" )
  	enviarMensaje_markdown(chat_id, "¬°Hey! Est√°s probando el nuevo bot escrito completamente en la programaci√≥n Latino :D. Por el momento faltan cosas. Pero de poco a poco ir√° mejorando üòÑüëç")
  	escribir(mensaje)
  fin
fin
